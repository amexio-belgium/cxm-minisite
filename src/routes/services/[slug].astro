---
import Base from "@layouts/Base.astro";
import {
  allServicePagesQuery,
  serviceQuery,
  siteConfigQuery,
} from "@api/queries";
import { imageBuilder, loadQuery } from "@api/sanity";
import SanityComponentsRenderer from "@components/cms-components/SanityComponentsRenderer.astro";
import { type ServiceWithReferences } from "src/sanity/custom.sanity.types";
import HeroHeader from "@components/uicomposition/HeroHeader.astro";
import Customers from "@components/uicomposition/Customers.astro";
import Faq from "@components/uicomposition/Faq.astro";
import FaqQuestion from "@components/uielements/FaqQuestion.astro";
import { PortableText } from "astro-portabletext";
import type {
  AllServicePagesQueryResult,
  SiteConfigQueryResult,
} from "@sanity/sanity.types";
import { getLocale, getLocalePlaceholder } from "i18n:astro";
import { VISUAL_EDITING_ENABLED } from "@src/consts";
import sitemap from "i18n:astro/sitemap";
import { getSitemapParams } from "@lib/sitemap";

export async function getStaticPaths() {
  if (!VISUAL_EDITING_ENABLED) {
    const { data: services } = await loadQuery<AllServicePagesQueryResult>({
      query: allServicePagesQuery,
      params: { language: getLocalePlaceholder() },
    });

    sitemap({
      dynamicParams: getSitemapParams(services, getLocalePlaceholder()),
    });

    return services.map((slug) => ({
      params: { slug },
    }));
  } else {
    return [];
  }
}

const { slug } = Astro.params;

const { data: siteConfig } = await loadQuery<SiteConfigQueryResult>({
  query: siteConfigQuery,
  params: { language: getLocale() },
});

if (!siteConfig) {
  return new Response(null, { status: 404 });
}

const { data: servicePage } = await loadQuery<ServiceWithReferences>({
  query: serviceQuery,
  params: { language: getLocale(), slug: slug! },
});

if (servicePage == null) {
  return new Response(null, { status: 404 });
}
---

<Base
  title={`${servicePage?.metadata?.title || servicePage?.intro?.title!} - ${siteConfig.siteName}`}
  description={servicePage?.metadata?.description || ""}
  slug={slug!}
  siteConfig={siteConfig}
  routeMap="services"
  translations={servicePage?._translations}
>
  <HeroHeader
    headline={servicePage.intro?.title}
    text={servicePage.intro?.intro}
    backgroundImage={servicePage?.image?.asset?._id}
  >
    {
      servicePage.customerReferences &&
        servicePage.customerReferences.length > 0 && (
          <Customers headline={servicePage.customerReferencesText}>
            {servicePage.customerReferences?.map((customer: any) => (
              <>
                {customer?.logo?.default?.asset && (
                  <img
                    src={imageBuilder
                      .image(customer.logo?.default?.asset)
                      .height(80)
                      .url()}
                    alt={
                      customer.logo.default.asset.altTexts?.[getLocale()] || ""
                    }
                    class="h-10 w-auto"
                  />
                )}
              </>
            ))}
          </Customers>
        )
    }
  </HeroHeader>
  <SanityComponentsRenderer content={servicePage?.content} />

  {
    servicePage.faqs && (
      <Faq headline={servicePage.faqs.title || ""}>
        {servicePage.faqs.questions?.map((question) => (
          <>
            {question.question && (
              <FaqQuestion headline={question.question} headlineTag="h3">
                {question.answer && <PortableText value={question.answer} />}
              </FaqQuestion>
            )}
          </>
        ))}
      </Faq>
    )
  }
</Base>
