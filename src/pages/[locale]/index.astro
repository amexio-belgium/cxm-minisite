---
import { VISUAL_EDITING_ENABLED } from "@src/consts";
import { locales } from "@src/locales/consts";
import Base from "@layouts/Base.astro";
import { contentPageQuery, siteConfigQuery } from "@api/queries";
import { loadQuery } from "@api/sanity";
import SanityComponentsRenderer from "@components/cms-components/SanityComponentsRenderer.astro";
import { type ContentPageWithReferences } from "src/sanity/custom.sanity.types";
import HeroHeader from "@components/uicomposition/HeroHeader.astro";
import type { SiteConfigQueryResult } from "@sanity/sanity.types";
import { getHrefFromLinkObject } from "@lib/sanityHelpers";
import Button from "@components/uielements/Button.astro";

const locale = Astro.currentLocale!;

export async function getStaticPaths() {
  if (!VISUAL_EDITING_ENABLED) {
    return locales.map((locale) => ({
      params: {
        locale: locale,
      },
    }));
  } else {
    return [];
  }
}

const { data: siteConfig } = await loadQuery<SiteConfigQueryResult>({
  query: siteConfigQuery,
  params: { language: locale },
});

if (!siteConfig || !siteConfig?.homePage?.slug) {
  return new Response(null, { status: 404 });
}

const slug = siteConfig?.homePage?.slug;

const { data: contentPage } = await loadQuery<ContentPageWithReferences>({
  query: contentPageQuery,
  params: { language: locale, slug: slug },
});
---

<Base
  title={siteConfig.siteName || ""}
  description={contentPage?.metadata?.description || ""}
  slug={slug!}
  siteConfig={siteConfig}
  translations={[]}
>
  <HeroHeader
    headline={contentPage.intro?.title}
    text={contentPage.intro?.intro}
    homepage={true}
  >
    <Button
      class="mt-8"
      longText
      icon="email"
      link={contentPage?.intro?.introCta?.link
        ? getHrefFromLinkObject(contentPage?.intro?.introCta?.link, locale)
        : undefined}
      color="dark"
      >{contentPage?.intro?.introCta?.text}
    </Button>
  </HeroHeader>
  <SanityComponentsRenderer content={contentPage?.content} />
</Base>
