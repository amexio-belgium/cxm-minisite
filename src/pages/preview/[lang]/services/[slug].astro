---
import Base from "@layouts/Base.astro";
import { serviceQuery, siteConfigQuery } from "@api/queries";
import { imageBuilder, loadQuery } from "@api/sanity";
import SanityComponentsRenderer from "@components/cms-components/SanityComponentsRenderer.astro";
import { type ServiceWithReferences } from "src/sanity/custom.sanity.types";
import HeroHeader from "@components/uicomposition/HeroHeader.astro";
import Customers from "@components/uicomposition/Customers.astro";
import Faq from "@components/uicomposition/Faq.astro";
import FaqQuestion from "@components/uielements/FaqQuestion.astro";
import { PortableText } from "astro-portabletext";
import { isPreview, siteLanguage } from "src/stores/global-store";
import type { SiteConfigQueryResult } from "@sanity/sanity.types";
import {defaultComponents} from "../../../../components/cms-components/PortableText/helper";

export const prerender = false;
const { lang, slug } = Astro.params;
if (!lang || !slug) {
  return Astro.redirect("/404");
}

const { data: siteConfig } = await loadQuery<SiteConfigQueryResult>({
  query: siteConfigQuery,
  params: { language: lang.toLowerCase() },
});

if (!siteConfig) {
  return new Response(null, { status: 404 });
}

const { data: servicePage } = await loadQuery<ServiceWithReferences>({
  query: serviceQuery,
  params: { language: lang!, slug: slug! },
});

siteLanguage.set(lang.toLowerCase());
isPreview.set(true);
---

<Base
  title={`${servicePage?.metadata?.title || servicePage?.intro?.title!} - ${siteConfig.siteName}`}
  description={servicePage?.metadata?.description || ""}
  slug={slug!}
  siteConfig={siteConfig}
>
  <HeroHeader
    headline={servicePage.intro?.title}
    text={servicePage.intro?.intro}
    backgroundImage={servicePage?.image?.asset?._id}
  >
    {
      servicePage.customerReferences &&
        servicePage.customerReferences.length > 0 && (
          <Customers headline={servicePage.customerReferencesText}>
            {servicePage.customerReferences?.map((customer) => (
              <>
                {customer?.logo?.default?.asset && (
                  <img
                    src={imageBuilder
                      .image(customer.logo?.default?.asset)
                      .height(80)
                      .url()}
                    alt={
                      customer.logo.default.asset.altTexts?.[
                        servicePage.language || "en"
                      ] || ""
                    }
                    class="h-10 w-auto"
                  />
                )}
              </>
            ))}
          </Customers>
        )
    }
  </HeroHeader>
  <SanityComponentsRenderer content={servicePage?.content} />

  {
    servicePage.faqs && (
      <Faq headline={servicePage.faqs.title || ""}>
        {servicePage.faqs.questions?.map((question) => (
          <>
            {question.question && (
              <FaqQuestion headline={question.question} headlineTag="h3">
                {question.answer && <PortableText components={defaultComponents} value={question.answer} />}
              </FaqQuestion>
            )}
          </>
        ))}
      </Faq>
    )
  }
</Base>
