---
import { useTranslations } from "src/i18n/utils";
import Link from "@components/uielements/Link.astro";
import FormattedDate from "@components/uielements/FormattedDate.astro";
import type {
  BlogHighlightReferenced,
  BlogPostWithReferences,
} from "@sanity/custom.sanity.types";
import { siteLanguage } from "src/stores/global-store";
import { imageBuilder } from "@api/sanity";
import { PortableText } from "astro-portabletext";
import { portableBlogHighlightComponents } from "@components/cms-components/BlogHighlight/helpers";

interface Props {
  blogPost: BlogHighlightReferenced;
}

const blogPost = Astro.props.blogPost.blogPost;
const lang = siteLanguage.get();
const t = useTranslations(lang, "work");
---

{
  blogPost && (
    <article class="group relative flex w-full flex-col justify-stretch gap-8 overflow-hidden rounded-2xl border border-blue bg-gradient-to-r from-blue-600/70 to-blue-800/70 shadow-sm shadow-blue-200 has-[:focus-visible]:outline has-[:focus-visible]:outline-2 has-[:focus-visible]:outline-offset-4 has-[:focus-visible]:outline-yellow-500 lg:flex-row">
      <div class="flex h-[300px] items-center justify-center overflow-hidden rounded-t-xl shadow-xl shadow-primary/20 lg:aspect-square lg:h-[unset] lg:shrink-0 lg:rounded-l-xl lg:rounded-tr-none">
        {blogPost.featuredImage?.asset && (
          <img
            loading="eager"
            src={imageBuilder
              .image(blogPost.featuredImage?.asset)
              .width(400)
              .height(400)
              .url()}
            class="h-[unset] min-h-full min-w-full max-w-[unset] object-cover transition-transform duration-300 ease-in-out motion-safe:group-hover:scale-105"
            loading="lazy"
            alt={blogPost.featuredImage?.asset.altTexts?.[lang]}
            width={400}
            height={400}
          />
        )}
      </div>
      <div class="mr-8 flex max-h-full w-full flex-col justify-between gap-4 px-4 pb-8 pt-0 text-white md:gap-8 md:p-8 md:px-8 lg:w-fit">
        <div class="flex flex-col gap-4">
          <h2 class="mb-2 font-serif text-lg [&>mark]:text-black">
            <Link
              class="no-underline outline-none content-none before:absolute before:inset-x-0 before:inset-y-0 focus-visible:ring-0"
              href={`/${lang}/blog/${blogPost.metadata?.slug?.current}`}
              textLength={blogPost.intro?.title?.length}
              hoverColor="yellow"
            >
              {blogPost.intro?.title}
            </Link>
          </h2>
          {blogPost.intro?.intro && (
            <div class="text-sm font-light">
              <PortableText
                components={portableBlogHighlightComponents}
                value={blogPost.intro?.intro}
              />
            </div>
          )}
        </div>
        <div>
          <div class="mb-4 mt-4 flex flex-row items-center gap-4 md:mt-8">
            <FormattedDate
              class="text-xs"
              date={new Date(blogPost.publicationDate || blogPost._createdAt)}
            />
            {blogPost.topic && (
              <span class="c-post-tag text-xs uppercase before:mr-2 before:font-sans before:text-secondary">
                {blogPost.topic.map((topic) => topic.prefLabel)}
              </span>
            )}
          </div>
          {blogPost.author && (
            <div class="flex items-center gap-4">
              {blogPost.author.image?.asset && (
                <img
                  loading="eager"
                  src={imageBuilder
                    .image(blogPost.author.image?.asset)
                    .width(54)
                    .height(54)
                    .url()}
                  class="h-10 w-10 rounded-full sm:h-14 sm:w-14"
                  width={50}
                  height={50}
                  alt={blogPost.author.name + " " + blogPost.author.jobTitle}
                />
              )}
              <div class="flex flex-col justify-center gap-1">
                <p class="font-xs">{blogPost.author.name}</p>
                <p class="text-xxs">{blogPost.author.jobTitle}</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </article>
  )
}
