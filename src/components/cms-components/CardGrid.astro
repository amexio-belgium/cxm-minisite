---
import TilesContainer from "@components/uicomposition/TilesContainer.astro";
import SmallTile from "@components/uielements/SmallTile.astro";
import type { i18nImageAsset } from "@sanity/custom.sanity.types";
import type { CardGridReferenced } from "../../sanity/custom.sanity.types";
import { imageBuilder } from "src/api/sanity";
import SanityImg from "@otterstack/sanity-img-astro";

interface Props {
  cardGrid: CardGridReferenced;
}

const locale = Astro.currentLocale!;
const { cardGrid } = Astro.props;

const stylesContainer = {
  popping:
    "text-black relative flex flex-col before:bg-light-blue-50 before:-z-10 before:absolute before:top-0 before:bottom-0 before:-left-12 marker:before:h-full before:w-[3000px] lg:before:rounded-xl",
  subtle:
    "text-white relative inline-flex flex-col items-start justify-start gap-20 bg-cover",
};

const stylesSmallTile = {
  popping:
    "services flex flex-row flex-wrap justify-between w-full gap-8 lg:flex-row lg:flex-nowrap text-black",
  subtle:
    "smalltile inline-flex flex-col items-center justify-center w-full gap-8 px-4 md:px-12 py-6 border-blue-500 shadow backdrop-blur-lg lg:w-1/3 bg-gradient-to-l from-blue-600/70 to-blue-800/70 shadow-blue-200 rounded-2xl border-1",
};
---

<TilesContainer
  headline={cardGrid?.intro?.title}
  description={cardGrid?.intro?.intro}
  class={stylesContainer[cardGrid.style!]}
  cta={cardGrid?.intro?.introCta}
>
  {
    cardGrid?.cards?.map((card: any) => {
      const asset = card?.icon?.asset as any as i18nImageAsset;
      return (
        <SmallTile
          headline={card.title || ""}
          description={card.content}
          class={stylesSmallTile[cardGrid.style!]}
        >
          {card.icon?.asset && card.icon?.asset?.extension == "svg" && (
            <div class="service__item h-20 w-20 overflow-visible">
              <object data={asset.url} />
            </div>
          )}
          {card.icon?.asset && card.icon?.asset?.extension != "svg" && (
            <img
              src={imageBuilder.image(asset).height(192).url()}
              alt={asset?.altTexts?.[locale]}
              class="h-24 w-auto"
              width="300"
              height="150"
              loading="lazy"
              decoding="async"
            />
          )}
        </SmallTile>
      );
    })
  }
  {
    cardGrid?.backgroundImage && (
      <div
        slot="bg-image"
        class="absolute -right-3/4 -z-10 h-[1000px] w-[250%] bg-contain bg-no-repeat sm:-right-full md:w-[1240px] lg:-right-1/3"
      >
        <SanityImg
          src={cardGrid.backgroundImage?.asset?._id}
          alt={cardGrid.backgroundImage?.asset?.altTexts?.[locale] || ""}
          loading="lazy"
        />
      </div>
    )
  }
</TilesContainer>
