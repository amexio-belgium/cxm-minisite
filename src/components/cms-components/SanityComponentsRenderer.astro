---
import CardGrid from "@components/cms-components/CardGrid.astro";
import ServiceCardList from "@components/cms-components/ServiceCardList.astro";
import type { Content } from "@sanity/custom.sanity.types";
import Callout from "@components/cms-components/Callout.astro";
import LongFormText from "@components/cms-components/LongFormText.astro";
import HighlightBlock from "@components/cms-components/HighlightBlock/HighlightBlock.astro";
import WorkCardList from "@components/cms-components/WorkCardList.astro";
import Tabs from "@components/cms-components/Tabs.astro";
import BlogHighlight from "@components/cms-components/BlogHighlight/BlogHighlight.astro";
import BlogsList from "@components/cms-components/BlogsList/BlogsList.astro";
import Quote from "@components/uicomposition/Quote.astro";
import CodeEmbed from "./CodeEmbed.astro";
import Faq from "../uicomposition/Faq.astro";
import ComponentWrapper from "@components/uielements/ComponentWrapper.astro";
import TechnologiesShowcase from "@components/uielements/TechnologiesShowcase.astro";

interface Props {
  content: Content | undefined;
}

const { content } = Astro.props;
---

{
  content?.map((content, index) => {
    switch (content._type) {
      case "cardGrid": {
        return (
          <ComponentWrapper
            classes={
              content.style === "popping"
                ? "xl:py-20 relative before:absolute before:-left-[3000px] before:bottom-0 before:right-[1000px] before:top-0 before:-z-10 before:w-[10000px] before:rounded-xl  marker:before:h-full"
                : undefined
            }
          >
            <CardGrid cardGrid={content} />
          </ComponentWrapper>
        );
      }
      case "servicesCardList": {
        return (
          <ComponentWrapper
            bgClass={`bg-light-blue-50 ${index === 0 && "lg:mt-8"}`}
          >
            <ServiceCardList serviceCardList={content} />
          </ComponentWrapper>
        );
      }
      case "callout": {
        return (
          <ComponentWrapper
            classes={`py-0 ${index === 0 ? "xl:pb-10 xl:pt-8" : "xl:py-20"} relative before:absolute before:-left-[3000px] before:bottom-0 before:right-[1000px] before:top-0 before:-z-10 before:w-[10000px] before:rounded-xl marker:before:h-full`}
          >
            <Callout callout={content} />
          </ComponentWrapper>
        );
      }
      case "longFormText": {
        return (
          <ComponentWrapper
            bgClass={content.standOut ? "bg-lightest-blue-50" : undefined}
          >
            <LongFormText longFormText={content} />
          </ComponentWrapper>
        );
      }
      case "tabs": {
        return (
          <ComponentWrapper>
            <Tabs tabsContent={content} />
          </ComponentWrapper>
        );
      }
      case "highlight": {
        return (
          <ComponentWrapper
            classes={`${content.style === "subtle" ? "mb-20 md:mb-40 mt-20" : ""}`}
          >
            <HighlightBlock highlight={content} />
          </ComponentWrapper>
        );
      }
      case "workCardList": {
        return (
          <ComponentWrapper
            bgClass={`${content.style === "basic" && (index === 0 ? "bg-light-blue-50 lg:mt-8" : "bg-light-blue-50")}`}
          >
            <WorkCardList workCardList={content} />
          </ComponentWrapper>
        );
      }
      case "testimonial": {
        return (
          <ComponentWrapper>
            <Quote testimonial={content} />
          </ComponentWrapper>
        );
      }
      case "blogHighlight": {
        return (
          <ComponentWrapper>
            <BlogHighlight blogPost={content} />
          </ComponentWrapper>
        );
      }
      case "blogsList": {
        return (
          <ComponentWrapper
            bgClass={`${content.style === "subtle" && (index === 0 ? "bg-light-blue-50 lg:mt-8" : "bg-light-blue-50")}`}
            classes={
              content.style === "subtle"
                ? "py-0 relative before:absolute before:-left-[3000px] before:bottom-0 before:right-[1000px] before:top-0 before:-z-10 before:w-[10000px] before:rounded-xl  marker:before:h-full"
                : "py-0 xl:py-20 relative before:absolute before:-left-[3000px] before:bottom-0 before:right-[1000px] before:top-0 before:-z-10 before:w-[10000px] before:rounded-xl  marker:before:h-full"
            }
          >
            <BlogsList blogsList={content} />
          </ComponentWrapper>
        );
      }
      case "codeEmbed": {
        return (
          <ComponentWrapper
            bgClass={content.style === "light" ? "bg-light-blue-50" : undefined}
          >
            <CodeEmbed code={content} />
          </ComponentWrapper>
        );
      }
      case "faq": {
        return (
          <ComponentWrapper>
            <Faq faq={content} />
          </ComponentWrapper>
        );
      }
      case "technologiesShowcase": {
        return (
          <ComponentWrapper
            bgClass={
              content.style === "popping" ? "bg-light-blue-50" : undefined
            }
          >
            <TechnologiesShowcase technologies={content} />
          </ComponentWrapper>
        );
      }
    }
  })
}
