---
import Button from "@components/uielements/Button.astro";
import SanityImg from "@otterstack/sanity-img-astro";
import { PortableText } from "astro-portabletext";
import type { ReferenceCaseReferenced } from "@sanity/custom.sanity.types";
import * as m from "@src/paraglide/messages";
import { defaultComponents } from "@components/cms-components/PortableText/helper";
import { stegaClean } from "@sanity/client/stega";
import { parseHref } from "@lib/helpers";
import { imageBuilder } from "@api/sanity";

interface Props {
  caseData: ReferenceCaseReferenced;
  small?: boolean;
}

const locale = Astro.currentLocale!;

const { caseData, small } = Astro.props;
---

<div
  class:list={[
    "group flex flex-col justify-stretch gap-8 motion-safe:animate-fade-up motion-safe:animate-delay-100",
    small ? "items-stretch" : "w-full md:flex-row",
  ]}
>
  {
    caseData?.introImage && (
      <div
        class:list={[
          "flex w-full items-center justify-center overflow-hidden rounded-t-xl transition-all motion-safe:group-hover:shadow-xl",
          small
            ? "max-h-[400px]"
            : "md:w-1/2 md:rounded-l-xl md:rounded-tr-none",
        ]}
      >
        {caseData?.introImage && (
          <SanityImg
            src={caseData?.introImage}
            alt={caseData?.introImage?.asset?.altTexts?.[locale] || ""}
            widths={[800, 1200, 1580]}
            height="470"
            width="790"
            sizes="(max-width: 790px) 100vw, 790px"
            class:list={[
              "h-[unset] min-h-full w-auto min-w-full max-w-[unset] object-cover transition-transform duration-300 ease-in-out motion-safe:group-hover:scale-105",
              small ? "shrink-0 object-scale-down" : "",
            ]}
            loading="lazy"
          />
        )}
      </div>
    )
  }
  <div
    class:list={[
      "flex max-h-full w-full flex-col justify-between gap-8 border-b-2 border-y-quaternary pb-8",
      small ? "h-3/4 md:px-4" : "px-4 md:w-1/2 md:border-y-2 md:p-8",
    ]}
  >
    <div class="flex flex-col gap-2">
      <div class="mb-4 flex flex-row items-start justify-between gap-8">
        <div class="flex flex-col">
          <span
            class="font-serif text-primary"
            set:html={caseData?.company?.name}
          />
          <h2
            class="caseheadline mb-2 font-serif text-xl [&>mark]:bg-none [&>mark]:bg-clip-border [&>mark]:text-black"
            set:html={caseData?.intro?.title}
          />
        </div>
        {
          caseData?.company?.logo?.default?.asset?._id && (
            <img
              loading="lazy"
              src={imageBuilder
                .image(caseData?.company?.logo?.default)
                .height(120)
                .fit("clip")
                .url()}
              class="h-12 w-auto shrink-0 sm:h-16 md:h-12 xl:h-16"
              alt={caseData?.company?.logo?.default?.asset?.altTexts?.[locale]}
            />
          )
        }
      </div>
      {
        caseData?.intro?.intro && (
          <div class="text-sm font-light [&>mark]:text-black">
            <PortableText
              value={caseData?.intro?.intro}
              components={defaultComponents}
            />
          </div>
        )
      }
      <ol class="mt-2 list-inside list-disc font-serif text-sm">
        {
          caseData?.duration && (
            <li class="ml-5 list-outside">{`${m.metadataDuration()}: ${caseData.duration}`}</li>
          )
        }
        {
          caseData?.collaborationModel && (
            <li class="ml-5 list-outside">
              {`${m.metadataCollaboration()}: ${caseData.collaborationModel?.collaborationTabs
                ?.map((tab) => stegaClean(tab?.concept?.prefLabel))
                .join(", ")}`}
            </li>
          )
        }
        {
          caseData?.coreTechnology && (
            <li class="ml-5 list-outside">
              {`${m.metadataTechnologies()}: ${caseData.coreTechnology}`}
            </li>
          )
        }
        {
          caseData?.services && (
            <li class="ml-5 list-outside">
              {m.metadataServices()}:
              {caseData.services.map((service, index) => (
                <a
                  style={`transition-duration: ${stegaClean(service.metadata?.title || "").length * 20}ms`}
                  class="mr-1 bg-gradient-to-r from-secondary from-0% via-secondary via-50% to-black to-50% bg-[length:200%_100%] bg-clip-text bg-[100%] text-transparent underline decoration-black decoration-1 underline-offset-2 transition-all hover:bg-[0%_100%] hover:decoration-secondary focus-visible:rounded focus-visible:px-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-secondary motion-reduce:transition-none"
                  href={parseHref(
                    `/${locale}/services/${service.metadata?.slug?.current}/`,
                  )}
                >
                  {`${service.metadata?.title}${index + 1 !== caseData.services?.length ? ", " : ""}`}
                </a>
              ))}
            </li>
          )
        }
      </ol>
    </div>
    {
      caseData?.contentItems && caseData.contentItems > 0 && (
        <Button
          class="self-end"
          link={`/${locale}/work/${caseData?.metadata?.slug?.current}/`}
          size="sm"
          color="light"
        >
          {m.overviewCta()}
        </Button>
      )
    }
  </div>
</div>
