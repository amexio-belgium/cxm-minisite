---
import Link from "@components/uielements/Link.astro";
import FormattedDate from "@components/uielements/FormattedDate.astro";
import type { BlogPostWithReferences } from "@sanity/custom.sanity.types";
import { imageBuilder } from "@api/sanity";
import { PortableText } from "astro-portabletext";
import { parseHref } from "@lib/helpers";
import { defaultComponents } from "../cms-components/PortableText/helper";

interface Props {
  blogPost: BlogPostWithReferences;
}
const locale = Astro.currentLocale!;

const { blogPost } = Astro.props;
---

{
  blogPost && (
    <article class="group relative flex h-full flex-col justify-stretch has-[:focus-visible]:rounded-xl has-[:focus-visible]:outline has-[:focus-visible]:outline-4 has-[:focus-visible]:outline-offset-0 has-[:focus-visible]:outline-orange-500">
      <div class="flex aspect-[5/3] w-full shrink-0 items-center justify-center overflow-hidden rounded-t-xl">
        {blogPost.featuredImage?.asset && (
          <img
            src={imageBuilder
              .image(blogPost.featuredImage?.asset)
              .width(400)
              .height(400)
              .url()}
            class="w-full transition-transform duration-300 ease-in-out motion-safe:group-hover:scale-105"
            loading="lazy"
            alt={blogPost.featuredImage?.asset.altTexts?.[locale]}
            width={400}
            height={400}
          />
        )}
      </div>
      <div class="flex h-full min-w-full flex-col gap-2 border-b-2 border-y-quaternary p-2 py-6">
        <div class="flex flex-row items-center gap-2">
          <FormattedDate
            class="text-xs font-light"
            date={new Date(blogPost.publicationDate || blogPost._createdAt)}
          />

          {blogPost.topic && (
            <span class="c-post-tag text-xs uppercase before:mr-2 before:font-sans before:text-secondary">
              {blogPost.topic.map((topic) => topic.prefLabel)}
            </span>
          )}
        </div>
        <h2 class="mb-2 font-serif text-lg font-bold [&>mark]:text-black">
          <Link
            onWhite
            textLength={blogPost.intro?.title?.length}
            class="text-black no-underline outline-none content-none before:absolute before:inset-x-0 before:inset-y-0"
            href={parseHref(
              `/${locale}/insights/${blogPost.metadata?.slug?.current}`,
            )}
          >
            {blogPost.intro?.title}
          </Link>
        </h2>
        <div class="text-sm font-light">
          {blogPost.intro?.intro && (
            <PortableText
              components={defaultComponents}
              value={blogPost.intro?.intro}
            />
          )}
        </div>

        {blogPost.author && (
          <div class="self-bottom mt-auto flex items-center gap-4 pt-8">
            {blogPost.author.image?.asset && (
              <img
                loading="eager"
                src={imageBuilder
                  .image(blogPost.author.image?.asset)
                  .width(54)
                  .height(54)
                  .url()}
                class="h-10 w-10 rounded-full sm:h-14 sm:w-14"
                width={50}
                height={50}
                alt={blogPost.author.name + " " + blogPost.author.jobTitle}
              />
            )}
            <div class="flex flex-col justify-center gap-1">
              <p class="font-xs">{blogPost.author.name}</p>
              <p class="text-xxs">{blogPost.author.jobTitle}</p>
            </div>
          </div>
        )}
      </div>
    </article>
  )
}
