---
import { t } from "i18n:astro";

interface Props {
  duration?: string;
  collaboration?: string;
  services?: string;
  technologies?: string;
}

const { duration, collaboration, services, technologies } = Astro.props;

const { lang } = Astro.params;
---

<div
  class="relative -mt-16 mb-20 inline-block h-fit w-full flex-col items-start justify-start rounded-2xl border border-blue bg-gradient-to-r from-blue-600/70 to-blue-800/70 p-4 text-white shadow-sm shadow-blue-200 animate-delay-500 animate-ease-out motion-safe:animate-fade-up md:p-8"
>
  <h2 class="mb-6 font-serif text-lg" set:html={t("metadata.headline")} />
  <dl
    class="project-metadata mb-8 flex flex-col gap-4 font-serif text-sm lg:flex-row lg:flex-wrap"
  >
    {
      duration && (
        <div class="flex after:text-secondary lg:after:ml-4">
          <dt class="inline lg:block">{t("metadata.duration") + ":"}</dt>
          <dd class="inline lg:block">{duration}</dd>
        </div>
      )
    }
    {
      collaboration && (
        <div class="after:text-secondary lg:flex lg:after:ml-4">
          <dt class="inline lg:block">{t("metadata.collaboration") + ":"}</dt>
          <dd class="inline lg:block">{collaboration}</dd>
        </div>
      )
    }
    {
      technologies && (
        <div class="after:text-secondary lg:flex lg:after:ml-4">
          <dt class="inline lg:block">{t("metadata.technologies") + ":"}</dt>
          <dd class="inline lg:block">{technologies}</dd>
        </div>
      )
    }
    {
      services && (
        <div class="lg:flex">
          <dt class="inline lg:block">{t("metadata.services") + ":"}</dt>
          <dd class="inline lg:block">{services}</dd>
        </div>
      )
    }
  </dl>
  <div
    class="grid items-center gap-x-2 gap-y-6 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5"
  >
    <slot />
  </div>
</div>
<style>
  @media (min-width: 1024px) {
    .project-metadata dt {
      padding-inline-end: 1ch;
    }
    @supports (content: "x" / "y") {
      .project-metadata > div:not(:last-child):after {
        content: "/" / "";
      }
    }
    @supports not (content: "x" / "y") {
      .project-metadata > div:not(:last-child):after {
        content: "/";
        alt: "";
      }
    }
  }
</style>
