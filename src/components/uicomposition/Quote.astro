---
import SanityImg from "@otterstack/sanity-img-astro";
import { defaultComponents } from "../cms-components/PortableText/helper";
import { PortableText } from "astro-portabletext";
import type { TestimonialReferenced } from "../../sanity/custom.sanity.types";
import { parseHref } from "@lib/helpers";

interface Props {
  testimonial: TestimonialReferenced;
  class?: string;
}

const locale = Astro.currentLocale!;
const { testimonial } = Astro.props;

const id = "id_" + Math.random().toString(36).slice(2, 11);
const variant = testimonial.variant ? testimonial.variant : "glass";
---

<blockquote
  class="group/quote sm:mt-18 mt-20 flex flex-col justify-end gap-8 md:mt-14 md:flex-row lg:mt-0"
>
  {
    variant == "flat" && (
      <div class="flex flex-col items-center justify-center text-white md:w-4/12">
        <SanityImg
          src={testimonial.person?.image?.asset?._id || ""}
          alt={testimonial.person?.image?.asset?.altTexts?.[locale] || ""}
          class="mb-8 aspect-square h-52 w-52 rounded-full transition-transform duration-300 ease-in-out motion-safe:group-hover/quote:scale-110 sm:h-40 sm:w-40 lg:h-52 lg:w-52"
          loading="lazy"
          sizes="(min-width:768px) 50vw, 100vw"
        />
        <footer>
          <cite class="flex flex-col items-center justify-center not-italic">
            <span class="text-xs" set:html={testimonial.person?.name} />
            <span class="text-xxs" set:html={testimonial.person?.jobTitle} />
          </cite>
        </footer>
      </div>
    )
  }
  <div
    class:list={[
      "flex w-full flex-col items-start gap-8 rounded-xl text-lg",
      variant == "flat" && "bg-lightest-blue-500 p-12 text-black lg:w-8/12",
      variant == "glass" &&
        "relative w-full rounded-2xl border border-blue bg-gradient-to-r from-blue-600/70 to-blue-800/70 p-4 py-8 pt-40 text-white shadow-sm shadow-blue-200 backdrop-blur-sm sm:p-12 sm:pt-40 lg:w-11/12 lg:pl-40 lg:pt-12",
      id,
    ]}
  >
    {
      variant == "flat" ? (
        <>
          <div class="flex h-20 w-20 items-center justify-center rounded-full bg-white p-4 transition-transform delay-200 duration-300 ease-in-out motion-safe:group-hover/quote:scale-110">
            <svg width="40" height="30" aria-hidden="true" focusable="false">
              <use
                xlink:href={parseHref("/icons/icon-sprite.svg#icon-quote")}
              />
            </svg>
          </div>
          {testimonial?.textObject?.richText && (
            <PortableText
              components={defaultComponents}
              value={testimonial?.textObject?.richText}
            />
          )}
        </>
      ) : (
        <>
          <SanityImg
            src={testimonial.person?.image?.asset?._id || ""}
            alt={testimonial.person?.image?.asset?.altTexts?.[locale] || ""}
            class="absolute -top-20 left-4 aspect-square h-52 w-52 rounded-full transition-transform duration-300 ease-in-out motion-safe:group-hover/quote:scale-105 lg:-left-20 lg:top-[unset]"
            loading="lazy"
            sizes="(min-width:768px) 50vw, 100vw"
          />
          <div class="relative p-4">
            <svg
              class="absolute left-0 top-0 h-4 w-4"
              width="40"
              height="30"
              aria-hidden="true"
              focusable="false"
            >
              <use
                xlink:href={parseHref("/icons/icon-sprite.svg#icon-quote")}
              />
            </svg>
            {testimonial?.textObject?.richText && (
              <PortableText
                components={defaultComponents}
                value={testimonial.textObject?.richText}
              />
            )}
            />
            <svg
              class="absolute -bottom-0 -right-0 h-4 w-4 rotate-180"
              width="40"
              height="30"
              aria-hidden="true"
              focusable="false"
            >
              <use
                xlink:href={parseHref("/icons/icon-sprite.svg#icon-quote")}
              />
            </svg>
          </div>
          <footer>
            <cite class="flex flex-col pl-4 not-italic text-white sm:pl-4">
              <span class="text-xs" set:html={testimonial.person?.name} />
              <span
                class="font-serif text-xxs"
                set:html={testimonial.person?.jobTitle}
              />
            </cite>
          </footer>
        </>
      )
    }
  </div>
</blockquote>

<script is:inline define:vars={{ id }}>
  const textBlock = document.querySelector(`.${id}`);

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting && textBlock) {
        textBlock.classList.add("motion-safe:animate-fade-up");
        observer.unobserve(textBlock);
      }
    });
  });

  textBlock && observer.observe(textBlock);
</script>
